on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name : Install Dependencies
        run : npm install --ignore-scripts
      - name : Bootstrap Dependencies
        run : npx lerna bootstrap --no-ci
      - name : Run Tests
        run : npm run test
        env:
          CI: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
        aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
        aws-region: us-west-2
    
      - name: Login ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

        - name: upload to ECR
          run: |
            docker build -t js-sdk-emitter-aws-otel -f integ-test/js-sdk-emitter/Dockerfile .
            docker tag js-sdk-emitter-aws-otel ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:${{ needs.e2etest-preparation.outputs.version }}
            docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:${{ needs.e2etest-preparation.outputs.version }}
            
    
